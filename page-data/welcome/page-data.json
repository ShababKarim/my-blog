{"componentChunkName":"component---src-templates-blog-post-js","path":"/welcome/","result":{"data":{"site":{"siteMetadata":{"title":"Hi, I'm Shabab üëãüèΩ"}},"markdownRemark":{"id":"734428fd-a9fa-5725-a8d7-53f4b6664c44","excerpt":"This blog is a collection of the many trends, ideas, and practices I've encountered that have had an impact\non me as an engineer. It is a means of distilling‚Ä¶","html":"<p><em>This blog is a collection of the many trends, ideas, and practices I've encountered that have had an impact\non me as an engineer. It is a means of distilling information and presenting what I consider to be the most important\naspects of software engineering.</em></p>\n<p>Here we go. Here's yet another tech blog. Is it a day that ends in \"y?\"</p>\n<p>Yes, I'm here to write about tech and software. Fortunately/unfortunately for whoever is reading, my goal isn't to\ndiscuss the latest Javascript framework or explain why I think tool A is better than tool B. I think there's plenty of people\nout there that spend enough time on those topics. I want to spend the majority of this blog exploring concepts that\nmay otherwise seem impractical.</p>\n<p>Reading content-rich books like Robert Martin's <em><a href=\"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\">Clean Code</a></em>\nis one thing but applying what you've just read into a project is a stretch. Where would you begin? What are the most\nimportant issues to tackle first? Books provide chapter-by-chapter explanations with code examples but no recipe on\nsensibly applying them to a production-grade application. What I aim to do is detail real-life instances of how I've used\ncertain practices in my career and the design tradeoffs that have come with it. This means in each post I'll analyze\na use case and come up with a basic end-to-end solution. At the very least, anyone reading should be able to use these\nsolutions as a guiding template.</p>\n<p>I do plan on sometimes writing about other topics as well. From career growth to my own experiences with certain tools (I said\nI wouldn't 2 paragraphs ago but I can't resist), I hope to make tech more accessible to anyone willing to learn. Sometimes\nsoftware engineering seems like tutorial-hell, but it simply comes down to our ability to differentiate what is important\nfrom what is noise.</p>\n<p>These posts are also a way for me to go back and compare my current beliefs against what I thought in the past.\nI've re-prioritized certain aspects of building software a few times over the last 5 years, so I hope writing\nwill help me track changes in how I evaluate the discipline overall.</p>\n<p>If you've stuck around, welcome! It's going to be an exciting journey of building things that impact the world! ‚ò∫Ô∏è</p>","frontmatter":{"title":"Welcome to My Blog","date":"December 09, 2023","description":"This blog is a collection of the many trends, ideas, and practices I've encountered that have had an impact on me as an engineer. It is a means of distilling information and presenting what I consider to be the most important  aspects of software engineering"}},"previous":null,"next":{"fields":{"slug":"/hexagonal-architecture/"},"frontmatter":{"title":"Hexagonal Architecture in Javascript"}}},"pageContext":{"id":"734428fd-a9fa-5725-a8d7-53f4b6664c44","previousPostId":null,"nextPostId":"5238e3ae-66b9-5e46-80d5-f8413d17b199"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}